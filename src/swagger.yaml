openapi: 3.0.0
info:
  title: Croco Book API
  description: RESTful API for managing books and pages
  version: 1.0.0
servers:
  - url: http://localhost:3000/
paths:
  /signup:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            example:
              username: "john_doe"
              password: "password123"
      responses:
        "201":
          description: User created successfully
        "400":
          description: Bad request
        "500":
          description: Internal server error
      security:
        - cookieAuth: []

  /signIn:
    post:
      summary: Sign in a user
      requestBody:
        required: true
        content:
          application/json:
            example:
              username: "john_doe"
              password: "password123"
      responses:
        "200":
          description: User signed in successfully
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
        "404":
          description: User not found
      security:
        - cookieAuth: []

  /books:
    get:
      summary: Get all books
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              example:
                result: Success
                books:
                  - id: "095d3662-bf76-42dc-b690-ea376a56e007"
                    title: "Sample Book"
                    author: "John Doe"
                    lastReadPage: null
                    createdAt: "2024-03-01T12:00:00Z"
                    updatedAt: "2024-03-01T12:00:00Z"
                    pages:
                      - id: "ec933f1f-93bb-493d-80da-eb3e523f2f51"
                        bookId: "177dc701-3448-4d3a-b107-3d4fddfaecda"
                        content: "Page 1 content"
                        page: 1
                        createdAt: "2024-03-01T12:00:00Z"
                        updatedAt: "2024-03-01T12:00:00Z"
      security:
        - cookieAuth: []
  /book:
    post:
      summary: Create a new book
      requestBody:
        required: true
        content:
          application/json:
            example:
              title: "New Book"
              pages:
                - page: 1
                  content: "Page 1 content"
      responses:
        "201":
          description: Book created successfully
          content:
            application/json:
              example:
                result: Success
                bookId: 2
      security:
        - cookieAuth: []

  /book/{id}:
    get:
      summary: Get details of a book by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: "095d3662-bf76-42dc-b690-ea376a56e007"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              example:
                result: Success
                book:
                  id: 1
                  title: "Sample Book"
                  author: "John Doe"
                  lastReadPage: null
                  createdAt: "2024-03-01T12:00:00Z"
                  updatedAt: "2024-03-01T12:00:00Z"
                  pages:
                    - id: "ec933f1f-93bb-493d-80da-eb3e523f2f51"
                      bookId: "177dc701-3448-4d3a-b107-3d4fddfaecda"
                      content: "Page 1 content"
                      page: 1
                      createdAt: "2024-03-01T12:00:00Z"
                      updatedAt: "2024-03-01T12:00:00Z"
      security:
        - cookieAuth: []
    put:
      summary: Update details of a book by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: "095d3662-bf76-42dc-b690-ea376a56e007"
      requestBody:
        required: true
        content:
          application/json:
            example:
              title: "Updated Book Title"
              author: "Updated Author"
      responses:
        "200":
          description: Book updated successfully
          content:
            application/json:
              example:
                result: Success
                book:
                  id: "177dc701-3448-4d3a-b107-3d4fddfaecda"
                  title: "Updated Book Title"
                  author: "Updated Author"
                  lastReadPage: null
                  createdAt: "2024-03-01T12:00:00Z"
                  updatedAt: "2024-03-01T12:00:00Z"
                  pages:
                    - id: "ec933f1f-93bb-493d-80da-eb3e523f2f51"
                      bookId: "177dc701-3448-4d3a-b107-3d4fddfaecda"
                      content: "Page 1 content"
                      page: 1
                      createdAt: "2024-03-01T12:00:00Z"
                      updatedAt: "2024-03-01T12:00:00Z"
      security:
        - cookieAuth: []
    delete:
      summary: Delete a book by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: "095d3662-bf76-42dc-b690-ea376a56e007"
      responses:
        "200":
          description: Book deleted successfully
          content:
            application/json:
              example:
                result: Success
                book:
                  id: 1
                  title: "Sample Book"
                  author: "John Doe"
                  lastReadPage: null
                  createdAt: "2024-03-01T12:00:00Z"
                  updatedAt: "2024-03-01T12:00:00Z"
                  pages:
                    - id: "ec933f1f-93bb-493d-80da-eb3e523f2f51"
                      bookId: "177dc701-3448-4d3a-b107-3d4fddfaecda"
                      content: "Page 1 content"
                      page: 1
                      createdAt: "2024-03-01T12:00:00Z"
                      updatedAt: "2024-03-01T12:00:00Z"
      security:
        - cookieAuth: []

  /page/{id}:
    put:
      summary: Update details of a page by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: "095d3662-bf76-42dc-b690-ea376a56e007"
      requestBody:
        required: true
        content:
          application/json:
            example:
              content: "Updated Page Content"
              page: 1
      responses:
        "200":
          description: Page updated successfully
          content:
            application/json:
              example:
                result: Success
                page:
                  id: "ec933f1f-93bb-493d-80da-eb3e523f2f51"
                  bookId: "177dc701-3448-4d3a-b107-3d4fddfaecda"
                  content: "Updated Page Content"
                  page: 1
                  createdAt: "2024-03-01T12:00:00Z"
                  updatedAt: "2024-03-01T12:00:00Z"
      security:
        - cookieAuth: []
    get:
      summary: Get next page by bookId. And update last read page field.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: "177dc701-3448-4d3a-b107-3d4fddfaecda"
      responses:
        "200":
          description: Page updated successfully
          content:
            application/json:
              example:
                result: Success
                page:
                  id: 1
                  bookId: 1
                  content: "CONTENT"
                  page: 1
                  createdAt: "2024-03-01T12:00:00Z"
                  updatedAt: "2024-03-01T12:00:00Z"
      security:
        - cookieAuth: []

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
